service: atriumn-api
useDotenv: true

# Create an optimized package for our functions
package:
    individually: true

plugins:
    - serverless-bundle # Package our functions with Webpack
    - serverless-offline
    - serverless-dotenv-plugin # Load .env as environment variables

disabledDeprecations: CLI_OPTIONS_SCHEMA
provider:
    name: aws
    runtime: nodejs12.x
    stage: prod
    region: us-east-2
    lambdaHashingVersion: 20201221

    # These environment variables are made available to our functions
    # under process.env.
    environment:
        tableName: ${env:TABLE_NAME}

    # 'iamRoleStatements' defines the permission policy for the Lambda function.
    # In this case Lambda functions are granted with permissions to access DynamoDB.
    iam:
        role:
            statements:
                - Effect: Allow
                  Action:
                      - dynamodb:Scan
                      - dynamodb:Query
                      - dynamodb:GetItem
                      - dynamodb:PutItem
                      - dynamodb:UpdateItem
                      - dynamodb:DeleteItem
                      - dynamodb:DescribeTable
                  Resource: 'arn:aws:dynamodb:us-east-2:*:*'

functions:
    # Defines an HTTP API endpoint that calls the main function in create.js
    # - path: url path is /images
    # - method: POST request
    create:
        handler: create.main
        events:
            - http:
                  path: images
                  method: post
    get:
        # Defines an HTTP API endpoint that calls the main function in get.js
        # - path: url path is /images/{id}
        # - method: GET request
        handler: get.main
        events:
            - http:
                  path: images/{id}
                  method: get
